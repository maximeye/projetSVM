zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(train$V12, train$V14, train$V17, cex=0.5, adj = 1)
#Plot echantillon de TEST
colors =c("blue","red")
p3d<- plot3d(test$V12, test$V14, test$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(test$V12, test$V14, test$V17, cex=0.5, adj = 1)
length = 100
grid = expand.grid(seq(from=min(train$V17),to=max(train$V17),length.out=length),
seq(from=min(train$V14),to=max(train$V14),length.out=length))
z=((w[1,1]*grid[,1] + w[1,2]*grid[,2])+1)^3
plot3d(grid[,1],grid[,2],z)  # this will draw plane.
# adding of points to the graphics.
points3d(train$V17[which(train$class==0)], train$V14[which(train$class==0)], train$V12[which(train$class==0)], col='red')
points3d(train$V17[which(train$class==1)], train$V14[which(train$class==1)], train$V12[which(train$class==1)], col='blue')
prediction=predict(model, test[,-4])
(tab=table(pred = prediction, true=test[,4]))
model=svm(class~., data=train, kernel="sigmoid",gamma = 0.01, cost = 10)
w <- t(model$coefs) %*% model$SV
####Taux de bonne prediction sur echantillon test
Y=predict(model,newdata = test)
table(test$class,Y)
mean(test$class==Y)
mean(test$class!=Y)
####Taux de bonnes/mauvaises classifications sur echantillon complet:
dataa=data[1:60000,]
Y=predict(model,newdata = dataa)
table(dataa$class,Y)
mean(dataa$class==Y)
mean(dataa$class!=Y)
#Plot echantillon APPRENTISSAGE
colors =c("blue","red")
p3d<- plot3d(train$V12, train$V14, train$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(train$V12, train$V14, train$V17, cex=0.5, adj = 1)
#Plot echantillon de TEST
colors =c("blue","red")
p3d<- plot3d(test$V12, test$V14, test$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(test$V12, test$V14, test$V17, cex=0.5, adj = 1)
length = 100
grid = expand.grid(seq(from=min(train$V17),to=max(train$V17),length.out=length),
seq(from=min(train$V14),to=max(train$V14),length.out=length))
z=tan(gamma*(w[1,1]*grid[,1] + w[1,2]*grid[,2]))
plot3d(grid[,1],grid[,2],z)  # this will draw plane.
# adding of points to the graphics.
points3d(train$V17[which(train$class==0)], train$V14[which(train$class==0)], train$V12[which(train$class==0)], col='red')
points3d(train$V17[which(train$class==1)], train$V14[which(train$class==1)], train$V12[which(train$class==1)], col='blue')
prediction=predict(model, test[,-4])
(tab=table(pred = prediction, true=test[,4]))
View(model)
model=svm(class~.,data=train,kernel="linear",scale=F,cost=105)
w <- t(model$coefs) %*% model$SV
#Taux de bonnes/mauvaises classifications sur echantillon test:
Y=predict(model,newdata = test)
#list(cbind(test, Y), model$index)
table(test$class,Y)
mean(test$class==Y)
mean(test$class!=Y)
#Taux de bonnes/mauvaises classifications sur echantillon complet:
dataa=data[1:60000,]
Y=predict(model,newdata = dataa)
#list(cbind(test, Y), model$index)
table(dataa$class,Y)
mean(dataa$class==Y)
mean(dataa$class!=Y)
#Plot echantillon APPRENTISSAGE
colors =c("blue","red")
p3d<- plot3d(train$V12, train$V14, train$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(train$V12, train$V14, train$V17, cex=0.5, adj = 1)
#Plot echantillon de TEST
colors =c("blue","red")
p3d<- plot3d(test$V12, test$V14, test$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(test$V12, test$V14, test$V17, cex=0.5, adj = 1)
length = 100
grid = expand.grid(seq(from=min(train$V17),to=max(train$V17),length.out=length),
seq(from=min(train$V14),to=max(train$V14),length.out=length))
#z = (model$rho- w[1,1]*grid[,1] - w[1,2]*grid[,2]) / w[1,3]
z=(w[1,1]*grid[,1] + w[1,2]*grid[,2])
plot3d(grid[,1],grid[,2],z)  # this will draw plane.
# adding of points to the graphics.
points3d(train$V17[which(train$class==0)], train$V14[which(train$class==0)], train$V12[which(train$class==0)], col='red')
points3d(train$V17[which(train$class==1)], train$V14[which(train$class==1)], train$V12[which(train$class==1)], col='blue')
View(w)
model=svm(class~.,data=train,kernel="linear",scale=F,cost=105)
w <- t(model$coefs) %*% model$SV
#Taux de bonnes/mauvaises classifications sur echantillon test:
Y=predict(model,newdata = test)
#list(cbind(test, Y), model$index)
table(test$class,Y)
mean(test$class==Y)
mean(test$class!=Y)
#Taux de bonnes/mauvaises classifications sur echantillon complet:
dataa=data[1:60000,]
Y=predict(model,newdata = dataa)
#list(cbind(test, Y), model$index)
table(dataa$class,Y)
mean(dataa$class==Y)
mean(dataa$class!=Y)
#Plot echantillon APPRENTISSAGE
colors =c("blue","red")
p3d<- plot3d(train$V12, train$V14, train$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(train$V12, train$V14, train$V17, cex=0.5, adj = 1)
#Plot echantillon de TEST
colors =c("blue","red")
p3d<- plot3d(test$V12, test$V14, test$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(test$V12, test$V14, test$V17, cex=0.5, adj = 1)
length = 100
grid = expand.grid(seq(from=min(train$V17),to=max(train$V17),length.out=length),
seq(from=min(train$V14),to=max(train$V14),length.out=length),
seq(from=min(train$V12),to=max(train$V12),length.out=length))
#z = (model$rho- w[1,1]*grid[,1] - w[1,2]*grid[,2]) / w[1,3]
z=(w[1,1]*grid[,1] + w[1,2]*grid[,2]+w[1,3]*grid[,2])
plot3d(grid[,1],grid[,2],z)  # this will draw plane.
# adding of points to the graphics.
points3d(train$V17[which(train$class==0)], train$V14[which(train$class==0)], train$V12[which(train$class==0)], col='red')
points3d(train$V17[which(train$class==1)], train$V14[which(train$class==1)], train$V12[which(train$class==1)], col='blue')
model=svm(class~.,data=train,kernel="linear",scale=F,cost=105)
w <- t(model$coefs) %*% model$SV
#Taux de bonnes/mauvaises classifications sur echantillon test:
Y=predict(model,newdata = test)
#list(cbind(test, Y), model$index)
table(test$class,Y)
mean(test$class==Y)
mean(test$class!=Y)
#Taux de bonnes/mauvaises classifications sur echantillon complet:
dataa=data[1:60000,]
Y=predict(model,newdata = dataa)
#list(cbind(test, Y), model$index)
table(dataa$class,Y)
mean(dataa$class==Y)
mean(dataa$class!=Y)
#Plot echantillon APPRENTISSAGE
colors =c("blue","red")
p3d<- plot3d(train$V12, train$V14, train$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(train$V12, train$V14, train$V17, cex=0.5, adj = 1)
#Plot echantillon de TEST
colors =c("blue","red")
p3d<- plot3d(test$V12, test$V14, test$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(test$V12, test$V14, test$V17, cex=0.5, adj = 1)
length = 100
grid = expand.grid(seq(from=min(train$V17),to=max(train$V17),length.out=length),
seq(from=min(train$V14),to=max(train$V14),length.out=length),
seq(from=min(train$V12),to=max(train$V12),length.out=length))
#z = (model$rho- w[1,1]*grid[,1] - w[1,2]*grid[,2]) / w[1,3]
z=(model$rho- w[1,1]*grid[,1] - w[1,2]*grid[,2] - w[1,3]*grid[,2])
plot3d(grid[,1],grid[,2],z)  # this will draw plane.
# adding of points to the graphics.
points3d(train$V17[which(train$class==0)], train$V14[which(train$class==0)], train$V12[which(train$class==0)], col='red')
points3d(train$V17[which(train$class==1)], train$V14[which(train$class==1)], train$V12[which(train$class==1)], col='blue')
model=svm(class~.,data=train,kernel="linear",scale=F,cost=105)
w <- t(model$coefs) %*% model$SV
#Taux de bonnes/mauvaises classifications sur echantillon test:
Y=predict(model,newdata = test)
#list(cbind(test, Y), model$index)
table(test$class,Y)
mean(test$class==Y)
mean(test$class!=Y)
#Taux de bonnes/mauvaises classifications sur echantillon complet:
dataa=data[1:60000,]
Y=predict(model,newdata = dataa)
#list(cbind(test, Y), model$index)
table(dataa$class,Y)
mean(dataa$class==Y)
mean(dataa$class!=Y)
#Plot echantillon APPRENTISSAGE
colors =c("blue","red")
p3d<- plot3d(train$V12, train$V14, train$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(train$V12, train$V14, train$V17, cex=0.5, adj = 1)
#Plot echantillon de TEST
colors =c("blue","red")
p3d<- plot3d(test$V12, test$V14, test$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(test$V12, test$V14, test$V17, cex=0.5, adj = 1)
length = 100
grid = expand.grid(seq(from=min(train$V17),to=max(train$V17),length.out=length),
seq(from=min(train$V14),to=max(train$V14),length.out=length))
z = (model$rho- w[1,1]*grid[,1] - w[1,2]*grid[,2]) / w[1,3]
#z=(w[1,1]*grid[,1] + w[1,2]*grid[,2])
plot3d(grid[,1],grid[,2],z)  # this will draw plane.
# adding of points to the graphics.
points3d(train$V17[which(train$class==0)], train$V14[which(train$class==0)], train$V12[which(train$class==0)], col='red')
points3d(train$V17[which(train$class==1)], train$V14[which(train$class==1)], train$V12[which(train$class==1)], col='blue')
model=svm(class~.,data=train,kernel="linear",scale=F,cost=105)
w <- t(model$coefs) %*% model$SV
#Taux de bonnes/mauvaises classifications sur echantillon test:
Y=predict(model,newdata = test)
#list(cbind(test, Y), model$index)
table(test$class,Y)
mean(test$class==Y)
mean(test$class!=Y)
#Taux de bonnes/mauvaises classifications sur echantillon complet:
dataa=data[1:60000,]
Y=predict(model,newdata = dataa)
#list(cbind(test, Y), model$index)
table(dataa$class,Y)
mean(dataa$class==Y)
mean(dataa$class!=Y)
#Plot echantillon APPRENTISSAGE
colors =c("blue","red")
p3d<- plot3d(train$V12, train$V14, train$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(train$V12, train$V14, train$V17, cex=0.5, adj = 1)
#Plot echantillon de TEST
colors =c("blue","red")
p3d<- plot3d(test$V12, test$V14, test$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(test$V12, test$V14, test$V17, cex=0.5, adj = 1)
length = 100
grid = expand.grid(seq(from=min(train$V17),to=max(train$V17),length.out=length),
seq(from=min(train$V14),to=max(train$V14),length.out=length),
seq(from=min(train$V12),to=max(train$V12),length.out=length))
#z = (model$rho- w[1,1]*grid[,1] - w[1,2]*grid[,2]) / w[1,3]
z=(model$rho- w[1,1]*grid[,1] - w[1,2]*grid[,2] - w[1,3]*grid[,3])
plot3d(grid[,1],grid[,2],z)  # this will draw plane.
# adding of points to the graphics.
points3d(train$V17[which(train$class==0)], train$V14[which(train$class==0)], train$V12[which(train$class==0)], col='red')
points3d(train$V17[which(train$class==1)], train$V14[which(train$class==1)], train$V12[which(train$class==1)], col='blue')
model=svm(class~.,data=train,kernel="linear",scale=F,cost=105)
w <- t(model$coefs) %*% model$SV
#Taux de bonnes/mauvaises classifications sur echantillon test:
Y=predict(model,newdata = test)
#list(cbind(test, Y), model$index)
table(test$class,Y)
mean(test$class==Y)
mean(test$class!=Y)
#Taux de bonnes/mauvaises classifications sur echantillon complet:
dataa=data[1:60000,]
Y=predict(model,newdata = dataa)
#list(cbind(test, Y), model$index)
table(dataa$class,Y)
mean(dataa$class==Y)
mean(dataa$class!=Y)
#Plot echantillon APPRENTISSAGE
colors =c("blue","red")
p3d<- plot3d(train$V12, train$V14, train$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(train$V12, train$V14, train$V17, cex=0.5, adj = 1)
#Plot echantillon de TEST
colors =c("blue","red")
p3d<- plot3d(test$V12, test$V14, test$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(test$V12, test$V14, test$V17, cex=0.5, adj = 1)
length = 100
grid = expand.grid(seq(from=min(train$V17),to=max(train$V17),length.out=length),
seq(from=min(train$V14),to=max(train$V14),length.out=length),
seq(from=min(train$V12),to=max(train$V12),length.out=length))
#z = (model$rho- w[1,1]*grid[,1] - w[1,2]*grid[,2]) / w[1,3]
z=(model$rho- (w[1,1]*grid[,1] + w[1,2]*grid[,2] + w[1,3]*grid[,3]))
plot3d(grid[,1],grid[,2],z)  # this will draw plane.
# adding of points to the graphics.
points3d(train$V17[which(train$class==0)], train$V14[which(train$class==0)], train$V12[which(train$class==0)], col='red')
points3d(train$V17[which(train$class==1)], train$V14[which(train$class==1)], train$V12[which(train$class==1)], col='blue')
model=svm(class~., data=train, kernel="sigmoid",gamma = 0.01, cost = 10)
w <- t(model$coefs) %*% model$SV
####Taux de bonne prediction sur echantillon test
Y=predict(model,newdata = test)
table(test$class,Y)
mean(test$class==Y)
mean(test$class!=Y)
####Taux de bonnes/mauvaises classifications sur echantillon complet:
dataa=data[1:60000,]
Y=predict(model,newdata = dataa)
table(dataa$class,Y)
mean(dataa$class==Y)
mean(dataa$class!=Y)
#Plot echantillon APPRENTISSAGE
colors =c("blue","red")
p3d<- plot3d(train$V12, train$V14, train$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(train$V12, train$V14, train$V17, cex=0.5, adj = 1)
#Plot echantillon de TEST
colors =c("blue","red")
p3d<- plot3d(test$V12, test$V14, test$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(test$V12, test$V14, test$V17, cex=0.5, adj = 1)
length = 100
grid = expand.grid(seq(from=min(train$V17),to=max(train$V17),length.out=length),
seq(from=min(train$V14),to=max(train$V14),length.out=length),
seq(from=min(train$V12),to=max(train$V12),length.out=length))
z=tan((gamma*(w[1,1]*grid[,1] + w[1,2]*grid[,2]+w[1,3]*grid[,3]))+model$coef0)
plot3d(grid[,1],grid[,2],z)  # this will draw plane.
# adding of points to the graphics.
points3d(train$V17[which(train$class==0)], train$V14[which(train$class==0)], train$V12[which(train$class==0)], col='red')
points3d(train$V17[which(train$class==1)], train$V14[which(train$class==1)], train$V12[which(train$class==1)], col='blue')
prediction=predict(model, test[,-4])
(tab=table(pred = prediction, true=test[,4]))
model=svm(class~., data=train, kernel="polynomial",gamma = 0.01, cost = 10)
w <- t(model$coefs) %*% model$SV
####Taux de bonne prediction sur echantillon test
Y=predict(model,newdata = test)
table(test$class,Y)
mean(test$class==Y)
mean(test$class!=Y)
####Taux de bonnes/mauvaises classifications sur echantillon complet:
dataa=data[1:60000,]
Y=predict(model,newdata = dataa)
table(dataa$class,Y)
mean(dataa$class==Y)
mean(dataa$class!=Y)
#Plot echantillon APPRENTISSAGE
colors =c("blue","red")
p3d<- plot3d(train$V12, train$V14, train$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(train$V12, train$V14, train$V17, cex=0.5, adj = 1)
#Plot echantillon de TEST
colors =c("blue","red")
p3d<- plot3d(test$V12, test$V14, test$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(test$V12, test$V14, test$V17, cex=0.5, adj = 1)
length = 100
grid = expand.grid(seq(from=min(train$V17),to=max(train$V17),length.out=length),
seq(from=min(train$V14),to=max(train$V14),length.out=length),
seq(from=min(train$V12),to=max(train$V12),length.out=length))
z=((gamma*(w[1,1]*grid[,1] + w[1,2]*grid[,2]+w[1,3]*grid[,3])+model$coef0))^3
plot3d(grid[,1],grid[,2],z)  # this will draw plane.
# adding of points to the graphics.
points3d(train$V17[which(train$class==0)], train$V14[which(train$class==0)], train$V12[which(train$class==0)], col='red')
points3d(train$V17[which(train$class==1)], train$V14[which(train$class==1)], train$V12[which(train$class==1)], col='blue')
prediction=predict(model, test[,-4])
(tab=table(pred = prediction, true=test[,4]))
model=svm(class~., data=train, kernel="radial",gamma = 0.01, cost = 10)
w <- t(model$coefs) %*% model$SV
####Taux de bonne prediction sur echantillon test
Y=predict(model,newdata = test)
table(test$class,Y)
mean(test$class==Y)
mean(test$class!=Y)
####Taux de bonnes/mauvaises classifications sur echantillon complet:
dataa=data[1:60000,]
Y=predict(model,newdata = dataa)
table(dataa$class,Y)
mean(dataa$class==Y)
mean(dataa$class!=Y)
#Plot echantillon APPRENTISSAGE
colors =c("blue","red")
p3d<- plot3d(train$V12, train$V14, train$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(train$V12, train$V14, train$V17, cex=0.5, adj = 1)
#Plot echantillon de TEST
colors =c("blue","red")
p3d<- plot3d(test$V12, test$V14, test$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(test$V12, test$V14, test$V17, cex=0.5, adj = 1)
length = 100
grid = expand.grid(seq(from=min(train$V17),to=max(train$V17),length.out=length),
seq(from=min(train$V14),to=max(train$V14),length.out=length))
#z = (model$rho- w[1,1]*grid[,1] - w[1,2]*grid[,2]) / w[1,3]
z= exp((-gamma)*(w[1,1]*grid[,1] - w[1,2]*grid[,2])^2)
plot3d(grid[,1],grid[,2],z)  # this will draw plane.
# adding of points to the graphics.
points3d(train$V17[which(train$class==0)], train$V14[which(train$class==0)], train$V12[which(train$class==0)], col='red')
points3d(train$V17[which(train$class==1)], train$V14[which(train$class==1)], train$V12[which(train$class==1)], col='blue')
model=svm(class~., data=train, kernel="radial",gamma = 0.01, cost = 10)
w <- t(model$coefs) %*% model$SV
####Taux de bonne prediction sur echantillon test
Y=predict(model,newdata = test)
table(test$class,Y)
mean(test$class==Y)
mean(test$class!=Y)
####Taux de bonnes/mauvaises classifications sur echantillon complet:
dataa=data[1:60000,]
Y=predict(model,newdata = dataa)
table(dataa$class,Y)
mean(dataa$class==Y)
mean(dataa$class!=Y)
#Plot echantillon APPRENTISSAGE
colors =c("blue","red")
p3d<- plot3d(train$V12, train$V14, train$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(train$V12, train$V14, train$V17, cex=0.5, adj = 1)
#Plot echantillon de TEST
colors =c("blue","red")
p3d<- plot3d(test$V12, test$V14, test$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(test$V12, test$V14, test$V17, cex=0.5, adj = 1)
length = 100
grid = expand.grid(seq(from=min(train$V17),to=max(train$V17),length.out=length),
seq(from=min(train$V14),to=max(train$V14),length.out=length))
#z = (model$rho- w[1,1]*grid[,1] - w[1,2]*grid[,2]) / w[1,3]
z= exp((-gamma)*(model$rho- w[1,1]*grid[,1] - w[1,2]*grid[,2])^2)
plot3d(grid[,1],grid[,2],z)  # this will draw plane.
# adding of points to the graphics.
points3d(train$V17[which(train$class==0)], train$V14[which(train$class==0)], train$V12[which(train$class==0)], col='red')
points3d(train$V17[which(train$class==1)], train$V14[which(train$class==1)], train$V12[which(train$class==1)], col='blue')
model=svm(class~., data=train, kernel="polynomial",gamma = 0.01, cost = 10)
w <- t(model$coefs) %*% model$SV
####Taux de bonne prediction sur echantillon test
Y=predict(model,newdata = test)
table(test$class,Y)
mean(test$class==Y)
mean(test$class!=Y)
####Taux de bonnes/mauvaises classifications sur echantillon complet:
dataa=data[1:60000,]
Y=predict(model,newdata = dataa)
table(dataa$class,Y)
mean(dataa$class==Y)
mean(dataa$class!=Y)
#Plot echantillon APPRENTISSAGE
colors =c("blue","red")
p3d<- plot3d(train$V12, train$V14, train$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(train$V12, train$V14, train$V17, cex=0.5, adj = 1)
#Plot echantillon de TEST
colors =c("blue","red")
p3d<- plot3d(test$V12, test$V14, test$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(test$V12, test$V14, test$V17, cex=0.5, adj = 1)
length = 100
grid = expand.grid(seq(from=min(train$V17),to=max(train$V17),length.out=length),
seq(from=min(train$V14),to=max(train$V14),length.out=length))
z=((gamma*(w[1,1]*grid[,1] + w[1,2]*grid[,2])+model$coef0))^2
plot3d(grid[,1],grid[,2],z)  # this will draw plane.
# adding of points to the graphics.
points3d(train$V17[which(train$class==0)], train$V14[which(train$class==0)], train$V12[which(train$class==0)], col='red')
points3d(train$V17[which(train$class==1)], train$V14[which(train$class==1)], train$V12[which(train$class==1)], col='blue')
prediction=predict(model, test[,-4])
(tab=table(pred = prediction, true=test[,4]))
model=svm(class~., data=train, kernel="sigmoid",gamma = 0.01, cost = 10)
w <- t(model$coefs) %*% model$SV
####Taux de bonne prediction sur echantillon test
Y=predict(model,newdata = test)
table(test$class,Y)
mean(test$class==Y)
mean(test$class!=Y)
####Taux de bonnes/mauvaises classifications sur echantillon complet:
dataa=data[1:60000,]
Y=predict(model,newdata = dataa)
table(dataa$class,Y)
mean(dataa$class==Y)
mean(dataa$class!=Y)
#Plot echantillon APPRENTISSAGE
colors =c("blue","red")
p3d<- plot3d(train$V12, train$V14, train$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(train$V12, train$V14, train$V17, cex=0.5, adj = 1)
#Plot echantillon de TEST
colors =c("blue","red")
p3d<- plot3d(test$V12, test$V14, test$V17, xlab="V12", ylab="V14",
zlab="V17",type="s",radius =0.3,
col=as.integer(train$class) ,
box=FALSE, size=5)
text3d(test$V12, test$V14, test$V17, cex=0.5, adj = 1)
length = 100
grid = expand.grid(seq(from=min(train$V17),to=max(train$V17),length.out=length),
seq(from=min(train$V14),to=max(train$V14),length.out=length))
z=tan((gamma*(w[1,1]*grid[,1] + w[1,2]*grid[,2]))+model$coef0)
plot3d(grid[,1],grid[,2],z)  # this will draw plane.
# adding of points to the graphics.
points3d(train$V17[which(train$class==0)], train$V14[which(train$class==0)], train$V12[which(train$class==0)], col='red')
points3d(train$V17[which(train$class==1)], train$V14[which(train$class==1)], train$V12[which(train$class==1)], col='blue')
