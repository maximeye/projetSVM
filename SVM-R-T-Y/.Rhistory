data=read.csv("/Users/Maxime/Documents/Cours/Master/M2/S1/SVM/Docs Projet/newdat.csv",header=T,sep=",")
data$class=as.factor(data$class)
set.seed(12345)
data=data[,-1]
taille_ech=10000
index=1:nrow(data)
trainindex=sample(index,round(taille_ech*0.7))
train=data[trainindex,]
itest=sample(index,round(taille_ech*0.3))
test=data[itest,]
attach(train)
###LINEAIRE
model=svm(class~.,data=train,kernel="linear",scale=F,cost=100)
library(e1071)
library(smotefamily)
library(ggplot2)
library(rgl)
library(misc3d)
library(ROCR)
library(leaps)
library(caTools)
###LINEAIRE
model=svm(class~.,data=train,kernel="linear",scale=F,cost=100)
plot(train$V17,train$V14,type="p",col=c("blue","red")[train$class])
beta0 = model$rho
beta1 = sum(model$coefs*train$V17[model$index])
beta2 = sum(model$coefs*train$V14[model$index])
beta1
beta2
abline(-beta0/beta2,-beta1/beta2,col="green")
abline((-beta0-5.0)/beta2,-beta1/beta2,col="gray")
abline((-beta0+5.0)/beta2,-beta1/beta2,col="gray")
plot(model,train,colors=c(red,blue))
plot(model,train)
plot(model,train)
###LINEAIRE
model=svm(class~.,data=train,kernel="linear",scale=F,cost=100)
plot(train$V17,train$V14,type="p",col=c("blue","red")[train$class])
plot(model,train)
plot(model,train)
plot(model,mode="pca")
plot(model,mode="pca")
plot(train$V17,train$V14,type="p",col=c("blue","red")[train$class])
###LINEAIRE
model=svm(class~.,data=train,kernel="linear",scale=F,cost=100)
plot(model,mode="pca")
library(e1071)
library(smotefamily)
library(ggplot2)
library(rgl)
library(misc3d)
library(ROCR)
library(leaps)
library(caTools)
data=read.csv("/Users/Maxime/Documents/Cours/Master/M2/S1/SVM/Docs Projet/newdat.csv",header=T,sep=",")
data$class=as.factor(data$class)
data=data[,-c(1,4)]
taille_ech=10000
index=1:nrow(data)
trainindex=sample(index,round(taille_ech*0.7))
train=data[trainindex,]
itest=sample(index,round(taille_ech*0.3))
test=data[itest,]
attach(train)
###LINEAIRE
model=svm(class~.,data=train,kernel="linear",scale=F,cost=100)
plot(model,train)
plot(model,mode=pca)
plot(model,train,col=c("red","blue"))
plot(model,train,col=as.factor(class))
plot(model,train,col=c("bisque","lightblue"))
plot(train$V17[which(train$class==0)], train$V14[which(train$class==0)],col='black')
plot(train$V17[which(train$class==1)], train$V14[which(train$class==1)],col='blue')
plot(train$V17[which(train$class==0)], train$V14[which(train$class==0)],col='black')
ggplot(model, train(x = V17, y = V14, colour = as.factor(class))+
sp
ggplot(model, train(x = V17, y = V14, colour = as.factor(class))+
geom_point(size=2.5)
sp
plot(train$V17[which(train$class==0)], train$V14[which(train$class==0)],col='black')
plot(train$V17[which(train$class==1)], train$V14[which(train$class==1)],col='blue',add=T)
plot(model,train,col=c("bisque","lightblue"))
###SIGMOID
model=svm(class~., data=train, kernel="sigmoid",gamma = 0.01, cost = 10)
plot(model,train,col=c("bisque","lightblue"))
taille_ech=15000
index=1:nrow(data)
trainindex=sample(index,round(taille_ech*0.7))
train=data[trainindex,]
itest=sample(index,round(taille_ech*0.3))
test=data[itest,]
attach(train)
###POLYNOMIAL
model=svm(class~., data=train, kernel="polynomial",gamma = 0.01, cost = 10)
plot(model,train,col=c("bisque","lightblue"))
Y=predict(model,newdata = test)
table(test$class,Y)
mean(test$class==Y)
mean(test$class!=Y)
###SIGMOID
model=svm(class~., data=train, kernel="sigmoid",gamma = 0.01, cost = 10)
Y=predict(model,newdata = test)
table(test$class,Y)
mean(test$class==Y)
mean(test$class!=Y)
plot(model,train,col=c("bisque","lightblue"))
